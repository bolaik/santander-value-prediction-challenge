source('~/Programs/Kaggle/santander-value-prediction-challenge/kernels/xgb_ae.R')
install.packages('tidyverse')
library(xgboost)
library(magrittr)
library(h2o)
install.packages('h2o')
source('~/Programs/Kaggle/santander-value-prediction-challenge/kernels/xgb_ae.R')
library(h2o)
library(tidyverse)
install.packages('h2o')
if ("package:h2o" %in% search()) { detach("package:h2o", unload=TRUE) }
if ("h2o" %in% rownames(installed.packages())) { remove.packages("h2o") }
pkgs <- c("RCurl","jsonlite")
for (pkg in pkgs) {
if (! (pkg %in% rownames(installed.packages()))) { install.packages(pkg) }
}
install.packages("h2o", type="source", repos="http://h2o-release.s3.amazonaws.com/h2o/rel-wright/2/R")
install.packages('/home/bolaik/Downloads/h2o-3.20.0.2/R/h2o_3.20.0.2.tar.gz', repos = NULL, type = 'source')
library(h2o)
demo(h2o.glm)
source('~/Programs/Kaggle/santander-value-prediction-challenge/kernels/xgb_ae.R')
xgb.importance(cols, model=m_xgb)
write.csv(xgb.importance(cols, model = m_xgb), 'feat_importance.csv')
library(tidyverse)
library(xgboost)
library(magrittr)
library(caret)
library(h2o)
h2o.deeplearning?
?
??h2o.deeplearning
?h2o.deeplearning
source('~/Programs/Kaggle/santander-value-prediction-challenge/kernels/xgb_ae.R')
source('~/Programs/Kaggle/santander-value-prediction-challenge/kernels/xgb_ae.R')
dim(tr)
dim(dval)
?shape
source('~/Programs/Kaggle/santander-value-prediction-challenge/kernels/xgb_ae.R')
source('~/Programs/Kaggle/santander-value-prediction-challenge/kernels/xgb_ae.R')
library(tidyverse)
library(xgboost)
library(magrittr)
library(caret)
library(h2o)
set.seed(0)
cat("Loading data...\n")
tr <- read_csv("../input/train.csv") %>% select(-ID)
te <- read_csv("../input/test.csv") %>% select(-ID)
target <- log1p(tr$target)
tr$target <- NULL
dim(tr)
cat("Removing constant & duplicate features...\n")
zero_var <- names(tr)[sapply(tr, var) == 0]
zero_var
names(tr)
tr['d5308d8bc']
tr['d5308d8bc'].unique()
tr['d5308d8bc'].unique
unique(tr['d5308d8bc']0
unique(tr['d5308d8bc'])
length(zero_var)
tr %<>% select(-one_of(zero_var))
te %<>% select(-one_of(zero_var))
dim(tr)
dup_var <- names(tr)[duplicated(lapply(tr, c))]
dup_var
tr %<>% select(-one_of(dup_var))
te %<>% select(-one_of(dup_var))
cor_var <- model.matrix(~.-1, tr) %>%
cor(method = "spearman") %>%
findCorrelation(cutoff = 0.98, names = TRUE) %>%
str_replace_all("`", "")
length(cor_var)
tr %<>% select(-one_of(cor_var))
te %<>% select(-one_of(cor_var))
dim(tr)
cat("Creating AEC features...\n")
h2o.no_progress()
h2o.init(nthreads = 4, max_mem_size = "9G")
tr_h2o <- as.h2o(tr)
te_h2o <- as.h2o(te)
print(dim(tr))
print(dim(te))
n_comp <- 6
m_aec <- h2o.deeplearning(training_frame = h2o.rbind(tr_h2o, te_h2o),
x = 1:ncol(tr_h2o),
autoencoder = T,
activation="Tanh",
reproducible = TRUE,
seed = 0,
sparse = T,
hidden = c(32, n_comp, 32),
max_w2 = 5,
epochs = 10)
m_aec.score_history
m_aec.score_history()
print(m_aec)
print(summary(m_aec))
summary(m_aec)
